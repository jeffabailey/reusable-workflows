name: Reusable workflow example

on:
  workflow_call:
    inputs:
      website_repository:
        required: true
        type: string
      SLACK_WEBHOOK:
        required: true
        type: string        
jobs:
  slackNotification:
    name: Slack Notification
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_CHANNEL: canzan-websites-jeff
        SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
        SLACK_ICON: https://github.com/rtCamp.png?size=48
        SLACK_USERNAME: github-action-slack-notify  
  deploywebsite:
    name: "Deploy Website"
    runs-on: ubuntu-latest
    env:
      working-directory: ./gatsby
      node-version: "15.10.0"
      SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      SLACK_CHANNEL: canzan-websites-jeff
      SLACK_ICON: https://github.com/rtCamp.png?size=48
      SLACK_TITLE: Deployed Website
      SLACK_USERNAME: github-action-slack-notify      
    strategy:
      matrix:
        node-version: [15.x]
    steps:
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_MESSAGE: 'Deploying website :earth_americas:'        
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'    
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: ${{ inputs.website_repository }}
          path: gatsby
          token: ${{ secrets.ACCESS_TOKEN }}        

      - name: Simple Dotenv
        uses: xom9ikk/dotenv@v1.0.2

      - name: Set Default Git Branch
        run: |
          git config --global init.defaultBranch master

      - name: Checkout gatsby
        uses: actions/checkout@v2
        with:
          repository: jeffabailey/gatsby
          path: gatsby
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Create Config
        run: |
          ${{env.working-directory}}/scripts/generate_react_config.sh ./.env > ${{env.working-directory}}/wordpress/config.ts

      - name: Print Config
        run: |
          cat ${{env.working-directory}}/wordpress/config.ts

      - name: Yarn Install
        uses: actions/setup-node@v2
        with:
          node-version: ${{env.node-version}}
      - run: yarn --cwd ${{env.working-directory}}/wordpress install
      - run: yarn --cwd ${{env.working-directory}}/wordpress build
      # - run: yarn --cwd ${{env.working-directory}}/gatsby test:unit
      # - run: yarn --cwd ${{env.working-directory}}/gatsby develop &
      # - run: sleep 60
      # - run: yarn --cwd ${{env.working-directory}}/gatsby test:e2e
      - run: yarn --cwd ${{env.working-directory}}/wordpress deploy
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_MESSAGE: 'Deployed website ${{env.working-directory}} :earth_americas:'        
          SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
  
      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      # - uses: actions/cache@v2
      #   id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-

      # - uses: actions/cache@v2
      #   id: gatsby
      #   with:
      #     path: wordpress
      #     key: ${{ runner.os }}-wordpress }}
      #     restore-keys: |
      #       ${{ runner.os }}-wordpress
# jobs:
#   example_job:
#     name: Pass input and secrets to my-action
#     runs-on: ubuntu-latest
#     steps:
#       - name: Print Config
#         run: |
#           echo "${{ inputs.username }} - ${{ secrets.token }}"
#       # - uses: ./.github/actions/my-action@v1
#       #   with:
#       #     username: ${{ inputs.username }}
#       #     token: ${{ secrets.token }}